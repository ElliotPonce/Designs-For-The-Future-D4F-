# .github/workflows/release.yml

permissions:
  contents: write

name: Release app
on:
  workflow_dispatch:

jobs:
  build:
    environment: release
    strategy:
      matrix:
        os: [
          { name: "windows", image: "windows-latest" },
          { name: "linux", image: "ubuntu-22.04" }
        ]
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: GitHub Checkout
        uses: actions/checkout@v4.1.1

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Confirm Node and NPM version
        run: |
          node -v
          npm -v

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Set up certificate (Windows)
        if: contains(matrix.os.name, 'windows')
        run: |
          echo "${{ secrets.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/Certificate_pkcs12.p12
        shell: bash

      - name: Set environment variables (Windows)
        if: contains(matrix.os.name, 'windows')
        id: variables
        run: |
          echo "SM_HOST=${{ secrets.SM_HOST }}" >> "$GITHUB_ENV"
          echo "SM_API_KEY=${{ secrets.SM_API_KEY }}" >> "$GITHUB_ENV"
          echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
          echo "SM_CLIENT_CERT_PASSWORD=${{ secrets.SM_CLIENT_CERT_PASSWORD }}" >> "$GITHUB_ENV"
        shell: bash

      # REMOVED: - name: Install DigiCert SSM CLI (Windows)
      # REMOVED:   if: contains(matrix.os.name, 'windows')
      # REMOVED:   run: |
      # REMOVED:     choco install digicertone-ssm --yes
      # REMOVED:   shell: powershell

      # REMOVED: - name: Verify SSM Installation (Windows)
      # REMOVED:   if: contains(matrix.os.name, 'windows')
      # REMOVED:   run: |
      # REMOVED:     smctl --version
      # REMOVED:   shell: bash

      - name: Code signing with Software Trust Manager (Windows)
        if: contains(matrix.os.name, 'windows')
        uses: digicert/ssm-code-signing@v1.0.0

      - name: Sync certificate (Windows)
        if: contains(matrix.os.name, 'windows')
        run: |
          smctl windows certsync --keypair-alias=${{ secrets.DIGICERT_KEYPAIR_ALIAS }}
        shell: bash

      - name: Publish app
        env:
          SM_CODE_SIGNING_CERT_SHA1_HASH: ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        run: npm run publish
